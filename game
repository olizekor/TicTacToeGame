#-- global variables---

#tic tac toe app

#board
board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-"]

#diplaying the board
def display_board():
  print(board[0] + "|" + board[1] + "|" + board[2])
  print(board[3] + "|" + board[4] + "|" + board[5])
  print(board[6] + "|" + board[7] + "|" + board[8])

#if game is still going on 
game_is_on = True

#who won 
winner = None

#whose turn it 
current_player = "X"

#playing the game
def play_the_game():
  
  display_board()
  
  #loop for it working while game_is_on()
  while game_is_on:
  
  #handle turn
   handle_turn(current_player)
   #players

   #check if game is over 
   check_if_game_over()
   # flip player
   flip_player()

  if winner == "X" or winner == "O":
    print(winner + " has won!!")
  elif winner == None:
    print ("Tie")

#the game 
def game_is_on():
  return
#check if game is over 
def check_if_game_over():
  check_on_winner()
  check_if_tie()
  

def check_on_winner():

  #set up global variable
  global winner

  row_winner = check_row()
  column_winner = check_column()
  diagonal_winner = check_diagonals()

  if row_winner:
    winner = row_winner
    return
  elif column_winner: 
    winner = column_winner
    return
  elif diagonal_winner:
    winner = diagonal_winner
    return
  else:
    winner = None

def check_row():

  global game_is_on
  
  row_1 = board[0] == board[1] == board[2] != "-"
  row_2 = board[3] == board[4] == board[5] != "-"
  row_3 = board[6] == board[7] == board[8] != "-"

  if row_1 or row_2 or row_3:
    game_is_on = False

  #returning the winner
  if row_1:
    return board[1]
  elif row_2:
    return board[4]
  elif row_3:
    return board[7]
  return


def check_column():
  
  global game_is_on
  
  column_1 = board[0] == board[3] == board[6] != "-"
  column_2 = board[1] == board[4] == board[7] != "-"
  column_3 = board[2] == board[5] == board[8] != "-"

  if column_1 or column_2 or column_3:
    game_is_on = False

  if column_1:
    return board[0]
  elif column_2:
    return board[1]
  elif column_3:
    return board[2]
  return

def check_diagonals():
  
  global game_is_on
  
  diagonal_1 = board[0] == board[4] == board[8] != "-"
  diagonal_2 = board[2] == board[4] == board[6] != "-"

  if diagonal_1 or diagonal_2:
    game_is_on = False

  if diagonal_1:
    return board[0]
  elif diagonal_2:
    return board[2]
  return
  
def check_if_tie():
  global game_is_on
  if "-" not in board:
    game_is_on = False 
  return

def flip_player():
  
  global current_player

  if current_player == "X":
    current_player = "O"
  elif current_player == "O":
    current_player = "X"
  return

def handle_turn(player):
  print()
  print(current_player + " is your turn")
  position = input("choose a number from 1 to 9: ")

  valid = False

  while not valid:
    while int(position) not in range(1,10):
      position = input("choose a number between 1 and 9:")
    position = int(position) - 1

    if board[position] == "-":
      valid = True
    else:
      print("you can't go there")

  board[position] = player
  display_board()
  

play_the_game()
